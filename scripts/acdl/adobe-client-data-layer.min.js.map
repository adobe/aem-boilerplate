{"mappings":"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","sources":["<anon>","src/index.js","src/dataLayerManager.js","src/utils/get.js","version.json","src/item.js","src/utils/dataMatchesContraints.js","src/itemConstraints.js","src/constants.js","src/listener.js","src/listenerManager.js","src/utils/mergeWith.js","src/utils/listenerMatch.js","src/utils/ancestorRemoved.js","src/utils/indexOfListener.js","src/utils/customMerge.js"],"sourcesContent":["(() => {\nvar $89cf5368902f0282$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ var $74148a4d3a24de22$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ var $a497a983a0dcb4fe$exports = {};\nfunction $a497a983a0dcb4fe$var$get(obj, path, defaultValue) {\n    const keys = Array.isArray(path) ? path : path.split(\".\");\n    let result = obj;\n    for (const key of keys){\n        result = result[key];\n        if (result === undefined) return defaultValue;\n    }\n    return result;\n}\nfunction $a497a983a0dcb4fe$var$has(obj, path) {\n    const keys = Array.isArray(path) ? path : path.split(\".\");\n    let result = obj;\n    for (const key of keys){\n        /* eslint-disable no-prototype-builtins */ if (!result?.hasOwnProperty(key)) return false;\n        result = result[key];\n    }\n    return true;\n}\n$a497a983a0dcb4fe$exports = {\n    get: $a497a983a0dcb4fe$var$get,\n    has: $a497a983a0dcb4fe$var$has\n};\n\n\nvar $a9db500a8fedd32d$exports = {};\n$a9db500a8fedd32d$exports = JSON.parse('{\"version\":\"3.0.1\"}');\n\n\nvar $74148a4d3a24de22$require$version = $a9db500a8fedd32d$exports.version;\nvar $aad298d30752c6a6$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ var $083a6b267f0e4609$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ $083a6b267f0e4609$exports = function(data, constraints) {\n    // Go through all constraints and find one which does not match the data\n    const foundObjection = Object.keys(constraints).find((key)=>{\n        const type = constraints[key].type;\n        const supportedValues = key && constraints[key].values;\n        const mandatory = !constraints[key].optional;\n        const value = data[key];\n        const valueType = typeof value;\n        const incorrectType = type && valueType !== type;\n        const noMatchForSupportedValues = supportedValues && !supportedValues.includes(value);\n        if (mandatory) return !value || incorrectType || noMatchForSupportedValues;\n        else return value && (incorrectType || noMatchForSupportedValues);\n    });\n    // If no objections found then data matches contraints\n    return typeof foundObjection === \"undefined\";\n};\n\n\nvar $196c54e0717366f7$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ /**\n * Constraints for each type of the item configuration.\n */ const $196c54e0717366f7$var$itemConstraints = {\n    event: {\n        event: {\n            type: \"string\"\n        },\n        eventInfo: {\n            optional: true\n        }\n    },\n    listenerOn: {\n        on: {\n            type: \"string\"\n        },\n        handler: {\n            type: \"function\"\n        },\n        scope: {\n            type: \"string\",\n            values: [\n                \"past\",\n                \"future\",\n                \"all\"\n            ],\n            optional: true\n        },\n        path: {\n            type: \"string\",\n            optional: true\n        }\n    },\n    listenerOff: {\n        off: {\n            type: \"string\"\n        },\n        handler: {\n            type: \"function\",\n            optional: true\n        },\n        scope: {\n            type: \"string\",\n            values: [\n                \"past\",\n                \"future\",\n                \"all\"\n            ],\n            optional: true\n        },\n        path: {\n            type: \"string\",\n            optional: true\n        }\n    }\n};\n$196c54e0717366f7$exports = $196c54e0717366f7$var$itemConstraints;\n\n\nvar $446225c82cc393af$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ const $446225c82cc393af$var$CONSTANTS = {\n    /**\n   * @typedef {String} ItemType\n   **/ /**\n   * Enumeration of data layer item types.\n   *\n   * @enum {ItemType}\n   * @readonly\n   */ itemType: {\n        /** Represents an item of type data */ DATA: \"data\",\n        /** Represents an item of type function */ FCTN: \"fctn\",\n        /** Represents an item of type event */ EVENT: \"event\",\n        /** Represents an item of type listener on */ LISTENER_ON: \"listenerOn\",\n        /** Represents an item of type listener off */ LISTENER_OFF: \"listenerOff\"\n    },\n    /**\n   * @typedef {String} DataLayerEvent\n   **/ /**\n   * Enumeration of data layer events.\n   *\n   * @enum {DataLayerEvent}\n   * @readonly\n   */ dataLayerEvent: {\n        /** Represents an event triggered for any change in the data layer state */ CHANGE: \"adobeDataLayer:change\",\n        /** Represents an event triggered for any event push to the data layer */ EVENT: \"adobeDataLayer:event\"\n    },\n    /**\n   * @typedef {String} ListenerScope\n   **/ /**\n   * Enumeration of listener scopes.\n   *\n   * @enum {ListenerScope}\n   * @readonly\n   */ listenerScope: {\n        /** Past events only */ PAST: \"past\",\n        /** Future events only */ FUTURE: \"future\",\n        /** All events, past and future */ ALL: \"all\"\n    }\n};\n$446225c82cc393af$exports = $446225c82cc393af$var$CONSTANTS;\n\n\nconst $aad298d30752c6a6$var$isEmpty = (obj)=>[\n        Object,\n        Array\n    ].includes((obj || {}).constructor) && !Object.entries(obj || {}).length;\nfunction $aad298d30752c6a6$var$isPlainObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    let proto = obj;\n    while(Object.getPrototypeOf(proto) !== null)proto = Object.getPrototypeOf(proto);\n    return Object.getPrototypeOf(obj) === proto;\n}\n/**\n * Constructs a data layer item.\n *\n * @param {ItemConfig} itemConfig The data layer item configuration.\n * @param {Number} index The item index in the array of existing items.\n */ $aad298d30752c6a6$exports = function(itemConfig, index) {\n    const _config = itemConfig;\n    const _index = index;\n    const _type = getType();\n    const _data = getData();\n    const _valid = !!_type;\n    function getType() {\n        return Object.keys($196c54e0717366f7$exports).find((key)=>$083a6b267f0e4609$exports(_config, $196c54e0717366f7$exports[key])) || typeof _config === \"function\" && $446225c82cc393af$exports.itemType.FCTN || $aad298d30752c6a6$var$isPlainObject(_config) && $446225c82cc393af$exports.itemType.DATA;\n    }\n    function getData() {\n        const data = Object.keys(_config).filter((key)=>!Object.keys($196c54e0717366f7$exports.event).includes(key)).reduce((obj, key)=>{\n            obj[key] = _config[key];\n            return obj;\n        }, {});\n        if (!$aad298d30752c6a6$var$isEmpty(data)) return data;\n    }\n    return {\n        /**\n     * Returns the item configuration.\n     *\n     * @returns {ItemConfig} The item configuration.\n     */ config: _config,\n        /**\n     * Returns the item type.\n     *\n     * @returns {itemType} The item type.\n     */ type: _type,\n        /**\n     * Returns the item data.\n     *\n     * @returns {DataConfig} The item data.\n     */ data: _data,\n        /**\n     * Indicates whether the item is valid.\n     *\n     * @returns {Boolean} true if the item is valid, false otherwise.\n     */ valid: _valid,\n        /**\n     * Returns the index of the item in the array of existing items (added with the standard Array.prototype.push())\n     *\n     * @returns {Number} The index of the item in the array of existing items if it exists, -1 otherwise.\n     */ index: _index\n    };\n};\n\n\nvar $baa3abaa0e0ec31e$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ \n/**\n * Constructs a data layer listener.\n *\n * @param {Item} item The item from which to construct the listener.\n */ $baa3abaa0e0ec31e$exports = function(item) {\n    const _event = item.config.on || item.config.off;\n    const _handler = item.config.handler || null;\n    const _scope = item.config.scope || item.config.on && $446225c82cc393af$exports.listenerScope.ALL || null;\n    const _path = item.config.path || null;\n    return {\n        /**\n     * Returns the listener event name.\n     *\n     * @returns {String} The listener event name.\n     */ event: _event,\n        /**\n     * Returns the listener handler.\n     *\n     * @returns {(Function|null)} The listener handler.\n     */ handler: _handler,\n        /**\n     * Returns the listener scope.\n     *\n     * @returns {(String|null)} The listener scope.\n     */ scope: _scope,\n        /**\n     * Returns the listener path.\n     *\n     * @returns {(String|null)} The listener path.\n     */ path: _path\n    };\n};\n\n\nvar $2745f882509d60f5$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ var $20b0c66b40d81262$exports = {};\nfunction $20b0c66b40d81262$var$mergeWith(target, source, customizer) {\n    if (!source || !target) return;\n    Object.keys(source).forEach((key)=>{\n        let newValue = customizer ? customizer(target[key], source[key], key, target) : undefined;\n        if (newValue === undefined) {\n            if (source[key] === Object(source[key]) && key in target && !Array.isArray(source[key])) newValue = $20b0c66b40d81262$var$mergeWith(target[key], source[key], customizer);\n            else newValue = source[key];\n        }\n        target[key] = newValue;\n    });\n    return target;\n}\nfunction $20b0c66b40d81262$var$cloneDeepWith(target, customizer) {\n    let newTarget = customizer ? customizer(target) : undefined;\n    if (newTarget === undefined) {\n        if (target === Object(target) && !Array.isArray(target)) {\n            newTarget = {};\n            const keys = Object.keys(target);\n            for(let i = 0; i < keys.length; i++){\n                const key = keys[i];\n                newTarget[key] = $20b0c66b40d81262$var$cloneDeepWith(target[key], customizer);\n            }\n        }\n        newTarget = structuredClone(target);\n    }\n    return newTarget;\n}\n$20b0c66b40d81262$exports = {\n    mergeWith: $20b0c66b40d81262$var$mergeWith,\n    cloneDeepWith: $20b0c66b40d81262$var$cloneDeepWith\n};\n\n\n\nvar $aed5a7be42aa6003$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ \n\nvar $37e37d5d9a9bb306$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ \n/**\n  * Checks if the object contains an ancestor that is set to null or undefined.\n  *\n  * @param {Object} object The object to check.\n  * @param {String} path The path to check.\n  * @returns {Boolean} true if the object contains an ancestor that is set to null or undefined, false otherwise.\n  * @private\n  */ $37e37d5d9a9bb306$exports = function(object, path) {\n    let ancestorPath = path.substring(0, path.lastIndexOf(\".\"));\n    while(ancestorPath){\n        if ((0, $a497a983a0dcb4fe$exports.has)(object, ancestorPath)) {\n            const ancestorValue = (0, $a497a983a0dcb4fe$exports.get)(object, ancestorPath);\n            if (ancestorValue === null || ancestorValue === undefined) return true;\n        }\n        ancestorPath = ancestorPath.substring(0, ancestorPath.lastIndexOf(\".\"));\n    }\n    return false;\n};\n\n\n/**\n * Checks if the listener matches the item.\n *\n * @param {Listener} listener The listener.\n * @param {Item} item The item.\n * @returns {Boolean} true if listener matches the item, false otherwise.\n */ function $aed5a7be42aa6003$var$listenerMatch(listener, item) {\n    const event = listener.event;\n    const itemConfig = item.config;\n    let matches = false;\n    if (item.type === $446225c82cc393af$exports.itemType.DATA) {\n        if (event === $446225c82cc393af$exports.dataLayerEvent.CHANGE) matches = $aed5a7be42aa6003$var$selectorMatches(listener, item);\n    } else if (item.type === $446225c82cc393af$exports.itemType.EVENT) {\n        if (event === $446225c82cc393af$exports.dataLayerEvent.EVENT || event === itemConfig.event) matches = $aed5a7be42aa6003$var$selectorMatches(listener, item);\n        if (item.data && event === $446225c82cc393af$exports.dataLayerEvent.CHANGE) matches = $aed5a7be42aa6003$var$selectorMatches(listener, item);\n    }\n    return matches;\n}\n/**\n * Checks if a listener has a selector that points to an object in the data payload of an item.\n *\n * @param {Listener} listener The listener to extract the selector from.\n * @param {Item} item The item.\n * @returns {Boolean} true if a selector is not provided or if the given selector is matching, false otherwise.\n * @private\n */ function $aed5a7be42aa6003$var$selectorMatches(listener, item) {\n    if (item.data && listener.path) return (0, $a497a983a0dcb4fe$exports.has)(item.data, listener.path) || $37e37d5d9a9bb306$exports(item.data, listener.path);\n    return true;\n}\n$aed5a7be42aa6003$exports = $aed5a7be42aa6003$var$listenerMatch;\n\n\nvar $0df9287d847fce76$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ $0df9287d847fce76$exports = function(listeners, listener) {\n    const event = listener.event;\n    if (Object.prototype.hasOwnProperty.call(listeners, event)) for (const [index, registeredListener] of listeners[event].entries()){\n        if (registeredListener.handler === listener.handler) return index;\n    }\n    return -1;\n};\n\n\n/**\n * Creates a listener manager.\n *\n * @param {Manager} dataLayerManager The data layer manager.\n * @returns {ListenerManager} A listener manager.\n */ $2745f882509d60f5$exports = function(dataLayerManager) {\n    const _listeners = {};\n    const _dataLayerManager = dataLayerManager;\n    /**\n   * Find index of listener in listeners object.\n   */ const _indexOfListener = $0df9287d847fce76$exports.bind(null, _listeners);\n    const ListenerManager = {\n        /**\n     * Registers a listener.\n     *\n     * @function\n     * @param {Listener} listener The listener to register.\n     * @returns {Boolean} true if the listener was registered, false otherwise.\n     */ register: function(listener) {\n            const event = listener.event;\n            if (Object.prototype.hasOwnProperty.call(_listeners, event)) {\n                if (_indexOfListener(listener) === -1) {\n                    _listeners[listener.event].push(listener);\n                    return true;\n                }\n            } else {\n                _listeners[listener.event] = [\n                    listener\n                ];\n                return true;\n            }\n            return false;\n        },\n        /**\n     * Unregisters a listener.\n     *\n     * @function\n     * @param {Listener} listener The listener to unregister.\n     */ unregister: function(listener) {\n            const event = listener.event;\n            if (Object.prototype.hasOwnProperty.call(_listeners, event)) {\n                if (!(listener.handler || listener.scope || listener.path)) _listeners[event] = [];\n                else {\n                    const index = _indexOfListener(listener);\n                    if (index > -1) _listeners[event].splice(index, 1);\n                }\n            }\n        },\n        /**\n     * Triggers listeners related to the passed item.\n     *\n     * @function\n     * @param {Item} item Item to trigger listener for.\n     */ triggerListeners: function(item) {\n            const triggeredEvents = _getTriggeredEvents(item);\n            triggeredEvents.forEach(function(event) {\n                if (Object.prototype.hasOwnProperty.call(_listeners, event)) for (const listener of _listeners[event])_callHandler(listener, item);\n            });\n        },\n        /**\n     * Triggers a single listener on the passed item.\n     *\n     * @function\n     * @param {Listener} listener Listener to call.\n     * @param {Item} item Item to call the listener with.\n     */ triggerListener: function(listener, item) {\n            _callHandler(listener, item);\n        }\n    };\n    /**\n   * Calls the listener handler on the item if a match is found.\n   *\n   * @param {Listener} listener The listener.\n   * @param {Item} item The item.\n   * @private\n   */ function _callHandler(listener, item) {\n        if ($aed5a7be42aa6003$exports(listener, item)) {\n            const callbackArgs = [\n                (0, $20b0c66b40d81262$exports.cloneDeepWith)(item.config)\n            ];\n            listener.handler.apply(_dataLayerManager.getDataLayer(), callbackArgs);\n        }\n    }\n    /**\n   * Returns the names of the events that are triggered for this item.\n   *\n   * @param {Item} item The item.\n   * @returns {Array<String>} The names of the events that are triggered for this item.\n   * @private\n   */ function _getTriggeredEvents(item) {\n        const triggeredEvents = [];\n        switch(item.type){\n            case $446225c82cc393af$exports.itemType.DATA:\n                triggeredEvents.push($446225c82cc393af$exports.dataLayerEvent.CHANGE);\n                break;\n            case $446225c82cc393af$exports.itemType.EVENT:\n                triggeredEvents.push($446225c82cc393af$exports.dataLayerEvent.EVENT);\n                if (item.data) triggeredEvents.push($446225c82cc393af$exports.dataLayerEvent.CHANGE);\n                if (item.config.event !== $446225c82cc393af$exports.dataLayerEvent.CHANGE) triggeredEvents.push(item.config.event);\n                break;\n        }\n        return triggeredEvents;\n    }\n    return ListenerManager;\n};\n\n\n\nvar $674a2637d63bdaa3$exports = {};\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/ \nvar $674a2637d63bdaa3$require$cloneDeepWith = $20b0c66b40d81262$exports.cloneDeepWith;\nvar $674a2637d63bdaa3$require$mergeWith = $20b0c66b40d81262$exports.mergeWith;\n/**\n * Merges the source into the object and sets objects as 'undefined' if they are 'undefined' in the source object.\n *\n * @param {Object} object The object into which to merge.\n * @param {Object} source The source to merge with.\n * @returns {Object} The object into which source was merged in.\n */ $674a2637d63bdaa3$exports = function(object, source) {\n    const makeOmittingCloneDeepCustomizer = function(predicate) {\n        return function omittingCloneDeepCustomizer(value) {\n            if (value === Object(value)) {\n                if (Array.isArray(value)) return value.filter((item)=>!predicate(item)).map((item)=>$674a2637d63bdaa3$require$cloneDeepWith(item, omittingCloneDeepCustomizer));\n                const clone = {};\n                for (const subKey of Object.keys(value))if (!predicate(value[subKey])) clone[subKey] = $674a2637d63bdaa3$require$cloneDeepWith(value[subKey], omittingCloneDeepCustomizer);\n                return clone;\n            }\n            return undefined;\n        };\n    };\n    const customizer = function(_, srcValue) {\n        if (typeof srcValue === \"undefined\" || srcValue === null) return null;\n    };\n    const omitDeep = function(value, predicate = (val)=>!val) {\n        return $674a2637d63bdaa3$require$cloneDeepWith(value, makeOmittingCloneDeepCustomizer(predicate));\n    };\n    $674a2637d63bdaa3$require$mergeWith(object, source, customizer);\n    // Remove null or undefined objects\n    object = omitDeep(object, (v)=>v === null || v === undefined);\n    return object;\n};\n\n\n/**\n * Manager\n *\n * @class Manager\n * @classdesc Data Layer manager that augments the passed data layer array and handles eventing.\n * @param {Object} config The Data Layer manager configuration.\n */ $74148a4d3a24de22$exports = function(config) {\n    const _config = config || {};\n    let _dataLayer = [];\n    let _preLoadedItems = [];\n    let _state = {};\n    let _listenerManager;\n    const DataLayerManager = {\n        getState: function() {\n            return _state;\n        },\n        getDataLayer: function() {\n            return _dataLayer;\n        }\n    };\n    _initialize();\n    _augment();\n    _processItems();\n    /**\n   * Initializes the data layer.\n   *\n   * @private\n   */ function _initialize() {\n        if (!Array.isArray(_config.dataLayer)) _config.dataLayer = [];\n        // Remove preloaded items from the data layer array and add those to the array of preloaded items\n        _preLoadedItems = _config.dataLayer.splice(0, _config.dataLayer.length);\n        _dataLayer = _config.dataLayer;\n        _dataLayer.version = $74148a4d3a24de22$require$version;\n        _state = {};\n        _listenerManager = $2745f882509d60f5$exports(DataLayerManager);\n    }\n    /**\n   * Updates the state with the item.\n   *\n   * @param {Item} item The item.\n   * @private\n   */ function _updateState(item) {\n        _state = $674a2637d63bdaa3$exports(_state, item.data);\n    }\n    /**\n   * Augments the data layer Array Object, overriding: push() and adding getState(), addEventListener and removeEventListener.\n   *\n   * @private\n   */ function _augment() {\n        /**\n     * Pushes one or more items to the data layer.\n     *\n     * @param {...ItemConfig} args The items to add to the data layer.\n     * @returns {Number} The length of the data layer following push.\n     */ _dataLayer.push = function(...args) {\n            const pushArguments = args;\n            const filteredArguments = args;\n            Object.keys(pushArguments).forEach(function(key) {\n                const itemConfig = pushArguments[key];\n                const item = $aad298d30752c6a6$exports(itemConfig);\n                if (!item.valid) {\n                    _logInvalidItemError(item);\n                    delete filteredArguments[key];\n                }\n                switch(item.type){\n                    case $446225c82cc393af$exports.itemType.DATA:\n                    case $446225c82cc393af$exports.itemType.EVENT:\n                        _processItem(item);\n                        break;\n                    case $446225c82cc393af$exports.itemType.FCTN:\n                        delete filteredArguments[key];\n                        _processItem(item);\n                        break;\n                    case $446225c82cc393af$exports.itemType.LISTENER_ON:\n                    case $446225c82cc393af$exports.itemType.LISTENER_OFF:\n                        delete filteredArguments[key];\n                }\n            });\n            if (filteredArguments[0]) return Array.prototype.push.apply(this, filteredArguments);\n        };\n        /**\n     * Returns a deep copy of the data layer state or of the object defined by the path.\n     *\n     * @param {Array|String} path The path of the property to get.\n     * @returns {*} Returns a deep copy of the resolved value if a path is passed, a deep copy of the data layer state otherwise.\n     */ _dataLayer.getState = function(path) {\n            if (path) return (0, $a497a983a0dcb4fe$exports.get)(structuredClone(_state), path);\n            return structuredClone(_state);\n        };\n        /**\n     * Event listener callback.\n     *\n     * @callback eventListenerCallback A function that is called when the event of the specified type occurs.\n     * @this {DataLayer}\n     * @param {Object} event The event object pushed to the data layer that triggered the callback.\n     */ /**\n     * Sets up a function that will be called whenever the specified event is triggered.\n     *\n     * @param {String} type A case-sensitive string representing the event type to listen for.\n     * @param {eventListenerCallback} callback A function that is called when the event of the specified type occurs.\n     * @param {Object} [options] Optional characteristics of the event listener.\n     * @param {String} [options.path] The path in the state object to filter the listening to.\n     * @param {('past'|'future'|'all')} [options.scope] The timing to filter the listening to:\n     *      - {String} past The listener is triggered for past events only.\n     *      - {String} future The listener is triggered for future events only.\n     *      - {String} all The listener is triggered for both past and future events (default value).\n     */ _dataLayer.addEventListener = function(type, callback, options) {\n            const eventListenerItem = $aad298d30752c6a6$exports({\n                on: type,\n                handler: callback,\n                scope: options && options.scope,\n                path: options && options.path\n            });\n            _processItem(eventListenerItem);\n        };\n        /**\n     * Removes an event listener previously registered with addEventListener().\n     *\n     * @param {String} type A case-sensitive string representing the event type to listen for.\n     * @param {Function} [listener] Optional function that is to be removed.\n     */ _dataLayer.removeEventListener = function(type, listener) {\n            const eventListenerItem = $aad298d30752c6a6$exports({\n                off: type,\n                handler: listener\n            });\n            _processItem(eventListenerItem);\n        };\n    }\n    /**\n   * Processes all items that already exist on the stack.\n   *\n   * @private\n   */ function _processItems() {\n        for(let i = 0; i < _preLoadedItems.length; i++)_dataLayer.push(_preLoadedItems[i]);\n    }\n    /**\n   * Processes an item pushed to the stack.\n   *\n   * @param {Item} item The item to process.\n   * @private\n   */ function _processItem(item) {\n        if (!item.valid) {\n            _logInvalidItemError(item);\n            return;\n        }\n        /**\n     * Returns all items before the provided one.\n     *\n     * @param {Item} item The item.\n     * @returns {Array<Item>} The items before.\n     * @private\n     */ function _getBefore(item) {\n            if (!(_dataLayer.length === 0 || item.index > _dataLayer.length - 1)) return _dataLayer.slice(0, item.index).map((itemConfig)=>$aad298d30752c6a6$exports(itemConfig));\n            return [];\n        }\n        const typeProcessors = {\n            data: function(item) {\n                _updateState(item);\n                _listenerManager.triggerListeners(item);\n            },\n            fctn: function(item) {\n                item.config.call(_dataLayer, _dataLayer);\n            },\n            event: function(item) {\n                if (item.data) _updateState(item);\n                _listenerManager.triggerListeners(item);\n            },\n            listenerOn: function(item) {\n                const listener = $baa3abaa0e0ec31e$exports(item);\n                switch(listener.scope){\n                    case $446225c82cc393af$exports.listenerScope.PAST:\n                        for (const registeredItem of _getBefore(item))_listenerManager.triggerListener(listener, registeredItem);\n                        break;\n                    case $446225c82cc393af$exports.listenerScope.FUTURE:\n                        _listenerManager.register(listener);\n                        break;\n                    case $446225c82cc393af$exports.listenerScope.ALL:\n                        {\n                            const registered = _listenerManager.register(listener);\n                            if (registered) for (const registeredItem of _getBefore(item))_listenerManager.triggerListener(listener, registeredItem);\n                        }\n                }\n            },\n            listenerOff: function(item) {\n                _listenerManager.unregister($baa3abaa0e0ec31e$exports(item));\n            }\n        };\n        typeProcessors[item.type](item);\n    }\n    /**\n   * Logs error for invalid item pushed to the data layer.\n   *\n   * @param {Item} item The invalid item.\n   * @private\n   */ function _logInvalidItemError(item) {\n        const message = \"The following item cannot be handled by the data layer because it does not have a valid format: \" + JSON.stringify(item.config);\n        console.error(message);\n    }\n    return DataLayerManager;\n};\n\n\n/**\n * Data Layer.\n *\n * @type {Object}\n */ const $89cf5368902f0282$var$DataLayer = {\n    Manager: $74148a4d3a24de22$exports\n};\nwindow.adobeDataLayer = window.adobeDataLayer || [];\n// If data layer has already been initialized, do not re-initialize.\nif (window.adobeDataLayer.version) console.warn(`Adobe Client Data Layer v${window.adobeDataLayer.version} has already been imported/initialized on this page. You may be erroneously loading it a second time.`);\nelse $89cf5368902f0282$var$DataLayer.Manager({\n    dataLayer: window.adobeDataLayer\n});\n/**\n * @typedef  {Object} ListenerOnConfig\n * @property {String} on Name of the event to bind to.\n * @property {String} [path] Object key in the state to bind to.\n * @property {ListenerScope} [scope] Scope of the listener.\n * @property {Function} handler Handler to execute when the bound event is triggered.\n */ /**\n * @typedef  {Object} ListenerOffConfig\n * @property {String} off Name of the event to unbind.\n * @property {String} [path] Object key in the state to bind to.\n * @property {ListenerScope} [scope] Scope of the listener.\n * @property {Function} [handler] Handler for a previously attached event to unbind.\n */ /**\n * @typedef {Object} DataConfig\n * @property {Object} data Data to be updated in the state.\n */ /**\n * @typedef {Object} EventConfig\n * @property {String} event Name of the event.\n * @property {Object} [eventInfo] Additional information to pass to the event handler.\n * @property {DataConfig.data} [data] Data to be updated in the state.\n */ /**\n * @typedef {DataConfig | EventConfig | ListenerOnConfig | ListenerOffConfig} ItemConfig\n */ /**\n * Triggered when there is change in the data layer state.\n *\n * @event DataLayerEvent.CHANGE\n * @type {Object}\n * @property {Object} data Data pushed that caused a change in the data layer state.\n */ /**\n * Triggered when an event is pushed to the data layer.\n *\n * @event DataLayerEvent.EVENT\n * @type {Object}\n * @property {String} name Name of the committed event.\n * @property {Object} eventInfo Additional information passed with the committed event.\n * @property {Object} data Data that was pushed alongside the event.\n */ /**\n * Triggered when an arbitrary event is pushed to the data layer.\n *\n * @event <custom>\n * @type {Object}\n * @property {String} name Name of the committed event.\n * @property {Object} eventInfo Additional information passed with the committed event.\n * @property {Object} data Data that was pushed alongside the event.\n */ $89cf5368902f0282$exports = $89cf5368902f0282$var$DataLayer;\n\n})();\n//# sourceMappingURL=adobe-client-data-layer.min.js.map\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst DataLayerManager = require('./dataLayerManager');\n\n/**\n * Data Layer.\n *\n * @type {Object}\n */\nconst DataLayer = {\n  Manager: DataLayerManager\n};\n\nwindow.adobeDataLayer = window.adobeDataLayer || [];\n\n// If data layer has already been initialized, do not re-initialize.\nif (window.adobeDataLayer.version) {\n  console.warn(\n    `Adobe Client Data Layer v${window.adobeDataLayer.version} has already been imported/initialized on this page. You may be erroneously loading it a second time.`\n  );\n} else {\n  DataLayer.Manager({\n    dataLayer: window.adobeDataLayer\n  });\n}\n\n/**\n * @typedef  {Object} ListenerOnConfig\n * @property {String} on Name of the event to bind to.\n * @property {String} [path] Object key in the state to bind to.\n * @property {ListenerScope} [scope] Scope of the listener.\n * @property {Function} handler Handler to execute when the bound event is triggered.\n */\n\n/**\n * @typedef  {Object} ListenerOffConfig\n * @property {String} off Name of the event to unbind.\n * @property {String} [path] Object key in the state to bind to.\n * @property {ListenerScope} [scope] Scope of the listener.\n * @property {Function} [handler] Handler for a previously attached event to unbind.\n */\n\n/**\n * @typedef {Object} DataConfig\n * @property {Object} data Data to be updated in the state.\n */\n\n/**\n * @typedef {Object} EventConfig\n * @property {String} event Name of the event.\n * @property {Object} [eventInfo] Additional information to pass to the event handler.\n * @property {DataConfig.data} [data] Data to be updated in the state.\n */\n\n/**\n * @typedef {DataConfig | EventConfig | ListenerOnConfig | ListenerOffConfig} ItemConfig\n */\n\n/**\n * Triggered when there is change in the data layer state.\n *\n * @event DataLayerEvent.CHANGE\n * @type {Object}\n * @property {Object} data Data pushed that caused a change in the data layer state.\n */\n\n/**\n * Triggered when an event is pushed to the data layer.\n *\n * @event DataLayerEvent.EVENT\n * @type {Object}\n * @property {String} name Name of the committed event.\n * @property {Object} eventInfo Additional information passed with the committed event.\n * @property {Object} data Data that was pushed alongside the event.\n */\n\n/**\n * Triggered when an arbitrary event is pushed to the data layer.\n *\n * @event <custom>\n * @type {Object}\n * @property {String} name Name of the committed event.\n * @property {Object} eventInfo Additional information passed with the committed event.\n * @property {Object} data Data that was pushed alongside the event.\n */\n\nmodule.exports = DataLayer;\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { get } from './utils/get.js';\n\nconst version = require('../version.json').version;\nconst Item = require('./item');\nconst Listener = require('./listener');\nconst ListenerManager = require('./listenerManager');\nconst CONSTANTS = require('./constants');\nconst customMerge = require('./utils/customMerge');\n\n/**\n * Manager\n *\n * @class Manager\n * @classdesc Data Layer manager that augments the passed data layer array and handles eventing.\n * @param {Object} config The Data Layer manager configuration.\n */\nmodule.exports = function(config) {\n  const _config = config || {};\n  let _dataLayer = [];\n  let _preLoadedItems = [];\n  let _state = {};\n  let _listenerManager;\n\n  const DataLayerManager = {\n    getState: function() {\n      return _state;\n    },\n    getDataLayer: function() {\n      return _dataLayer;\n    }\n  };\n\n  _initialize();\n  _augment();\n  _processItems();\n\n  /**\n   * Initializes the data layer.\n   *\n   * @private\n   */\n  function _initialize() {\n    if (!Array.isArray(_config.dataLayer)) {\n      _config.dataLayer = [];\n    }\n\n    // Remove preloaded items from the data layer array and add those to the array of preloaded items\n    _preLoadedItems = _config.dataLayer.splice(0, _config.dataLayer.length);\n    _dataLayer = _config.dataLayer;\n    _dataLayer.version = version;\n    _state = {};\n    _listenerManager = ListenerManager(DataLayerManager);\n  }\n\n  /**\n   * Updates the state with the item.\n   *\n   * @param {Item} item The item.\n   * @private\n   */\n  function _updateState(item) {\n    _state = customMerge(_state, item.data);\n  }\n\n  /**\n   * Augments the data layer Array Object, overriding: push() and adding getState(), addEventListener and removeEventListener.\n   *\n   * @private\n   */\n  function _augment() {\n    /**\n     * Pushes one or more items to the data layer.\n     *\n     * @param {...ItemConfig} args The items to add to the data layer.\n     * @returns {Number} The length of the data layer following push.\n     */\n    _dataLayer.push = function(...args) {\n      const pushArguments = args;\n      const filteredArguments = args;\n\n      Object.keys(pushArguments).forEach(function(key) {\n        const itemConfig = pushArguments[key];\n        const item = Item(itemConfig);\n\n        if (!item.valid) {\n          _logInvalidItemError(item);\n          delete filteredArguments[key];\n        }\n        switch (item.type) {\n          case CONSTANTS.itemType.DATA:\n          case CONSTANTS.itemType.EVENT: {\n            _processItem(item);\n            break;\n          }\n          case CONSTANTS.itemType.FCTN: {\n            delete filteredArguments[key];\n            _processItem(item);\n            break;\n          }\n          case CONSTANTS.itemType.LISTENER_ON:\n          case CONSTANTS.itemType.LISTENER_OFF: {\n            delete filteredArguments[key];\n          }\n        }\n      });\n\n      if (filteredArguments[0]) {\n        return Array.prototype.push.apply(this, filteredArguments);\n      }\n    };\n\n    /**\n     * Returns a deep copy of the data layer state or of the object defined by the path.\n     *\n     * @param {Array|String} path The path of the property to get.\n     * @returns {*} Returns a deep copy of the resolved value if a path is passed, a deep copy of the data layer state otherwise.\n     */\n    _dataLayer.getState = function(path) {\n      if (path) {\n        return get(structuredClone(_state), path);\n      }\n      return structuredClone(_state);\n    };\n\n    /**\n     * Event listener callback.\n     *\n     * @callback eventListenerCallback A function that is called when the event of the specified type occurs.\n     * @this {DataLayer}\n     * @param {Object} event The event object pushed to the data layer that triggered the callback.\n     */\n\n    /**\n     * Sets up a function that will be called whenever the specified event is triggered.\n     *\n     * @param {String} type A case-sensitive string representing the event type to listen for.\n     * @param {eventListenerCallback} callback A function that is called when the event of the specified type occurs.\n     * @param {Object} [options] Optional characteristics of the event listener.\n     * @param {String} [options.path] The path in the state object to filter the listening to.\n     * @param {('past'|'future'|'all')} [options.scope] The timing to filter the listening to:\n     *      - {String} past The listener is triggered for past events only.\n     *      - {String} future The listener is triggered for future events only.\n     *      - {String} all The listener is triggered for both past and future events (default value).\n     */\n    _dataLayer.addEventListener = function(type, callback, options) {\n      const eventListenerItem = Item({\n        on: type,\n        handler: callback,\n        scope: options && options.scope,\n        path: options && options.path\n      });\n\n      _processItem(eventListenerItem);\n    };\n\n    /**\n     * Removes an event listener previously registered with addEventListener().\n     *\n     * @param {String} type A case-sensitive string representing the event type to listen for.\n     * @param {Function} [listener] Optional function that is to be removed.\n     */\n    _dataLayer.removeEventListener = function(type, listener) {\n      const eventListenerItem = Item({\n        off: type,\n        handler: listener\n      });\n\n      _processItem(eventListenerItem);\n    };\n  }\n\n  /**\n   * Processes all items that already exist on the stack.\n   *\n   * @private\n   */\n  function _processItems() {\n    for (let i = 0; i < _preLoadedItems.length; i++) {\n      _dataLayer.push(_preLoadedItems[i]);\n    }\n  }\n\n  /**\n   * Processes an item pushed to the stack.\n   *\n   * @param {Item} item The item to process.\n   * @private\n   */\n  function _processItem(item) {\n    if (!item.valid) {\n      _logInvalidItemError(item);\n      return;\n    }\n\n    /**\n     * Returns all items before the provided one.\n     *\n     * @param {Item} item The item.\n     * @returns {Array<Item>} The items before.\n     * @private\n     */\n    function _getBefore(item) {\n      if (!(_dataLayer.length === 0 || item.index > _dataLayer.length - 1)) {\n        return _dataLayer.slice(0, item.index).map(itemConfig => Item(itemConfig));\n      }\n      return [];\n    }\n\n    const typeProcessors = {\n      data: function(item) {\n        _updateState(item);\n        _listenerManager.triggerListeners(item);\n      },\n      fctn: function(item) {\n        item.config.call(_dataLayer, _dataLayer);\n      },\n      event: function(item) {\n        if (item.data) {\n          _updateState(item);\n        }\n        _listenerManager.triggerListeners(item);\n      },\n      listenerOn: function(item) {\n        const listener = Listener(item);\n        switch (listener.scope) {\n          case CONSTANTS.listenerScope.PAST: {\n            for (const registeredItem of _getBefore(item)) {\n              _listenerManager.triggerListener(listener, registeredItem);\n            }\n            break;\n          }\n          case CONSTANTS.listenerScope.FUTURE: {\n            _listenerManager.register(listener);\n            break;\n          }\n          case CONSTANTS.listenerScope.ALL: {\n            const registered = _listenerManager.register(listener);\n            if (registered) {\n              for (const registeredItem of _getBefore(item)) {\n                _listenerManager.triggerListener(listener, registeredItem);\n              }\n            }\n          }\n        }\n      },\n      listenerOff: function(item) {\n        _listenerManager.unregister(Listener(item));\n      }\n    };\n\n    typeProcessors[item.type](item);\n  }\n\n  /**\n   * Logs error for invalid item pushed to the data layer.\n   *\n   * @param {Item} item The invalid item.\n   * @private\n   */\n  function _logInvalidItemError(item) {\n    const message = 'The following item cannot be handled by the data layer ' +\n      'because it does not have a valid format: ' +\n      JSON.stringify(item.config);\n    console.error(message);\n  }\n\n  return DataLayerManager;\n};\n","function get(obj, path, defaultValue) {\n  const keys = Array.isArray(path) ? path : path.split('.');\n  let result = obj;\n\n  for (const key of keys) {\n    result = result[key];\n\n    if (result === undefined) {\n      return defaultValue;\n    }\n  }\n\n  return result;\n}\n\nfunction has(obj, path) {\n  const keys = Array.isArray(path) ? path : path.split('.');\n  let result = obj;\n\n  for (const key of keys) {\n    /* eslint-disable no-prototype-builtins */\n    if (!result?.hasOwnProperty(key)) {\n      return false;\n    }\n    result = result[key];\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  get,\n  has\n};\n","{\n  \"version\": \"3.0.1\"\n}\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst dataMatchesContraints = require('./utils/dataMatchesContraints');\nconst ITEM_CONSTRAINTS = require('./itemConstraints');\nconst CONSTANTS = require('./constants');\n\nconst isEmpty = obj => [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length;\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  let proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Constructs a data layer item.\n *\n * @param {ItemConfig} itemConfig The data layer item configuration.\n * @param {Number} index The item index in the array of existing items.\n */\n\nmodule.exports = function(itemConfig, index) {\n  const _config = itemConfig;\n  const _index = index;\n  const _type = getType();\n  const _data = getData();\n  const _valid = !!_type;\n\n  function getType() {\n    return Object.keys(ITEM_CONSTRAINTS).find(key => dataMatchesContraints(_config, ITEM_CONSTRAINTS[key])) ||\n      (typeof _config === 'function' && CONSTANTS.itemType.FCTN) ||\n      (isPlainObject(_config) && CONSTANTS.itemType.DATA);\n  }\n\n  function getData() {\n    const data = Object.keys(_config)\n      .filter(key => !Object.keys(ITEM_CONSTRAINTS.event).includes(key))\n      .reduce((obj, key) => {\n        obj[key] = _config[key];\n        return obj;\n      }, {});\n    if (!isEmpty(data)) {\n      return data;\n    }\n  }\n\n  return {\n    /**\n     * Returns the item configuration.\n     *\n     * @returns {ItemConfig} The item configuration.\n     */\n    config: _config,\n\n    /**\n     * Returns the item type.\n     *\n     * @returns {itemType} The item type.\n     */\n    type: _type,\n\n    /**\n     * Returns the item data.\n     *\n     * @returns {DataConfig} The item data.\n     */\n    data: _data,\n\n    /**\n     * Indicates whether the item is valid.\n     *\n     * @returns {Boolean} true if the item is valid, false otherwise.\n     */\n    valid: _valid,\n\n    /**\n     * Returns the index of the item in the array of existing items (added with the standard Array.prototype.push())\n     *\n     * @returns {Number} The index of the item in the array of existing items if it exists, -1 otherwise.\n     */\n    index: _index\n  };\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nmodule.exports = function(data, constraints) {\n  // Go through all constraints and find one which does not match the data\n  const foundObjection = Object.keys(constraints).find(key => {\n    const type = constraints[key].type;\n    const supportedValues = key && constraints[key].values;\n    const mandatory = !constraints[key].optional;\n    const value = data[key];\n    const valueType = typeof value;\n    const incorrectType = type && valueType !== type;\n    const noMatchForSupportedValues = supportedValues && !supportedValues.includes(value);\n    if (mandatory) {\n      return !value || incorrectType || noMatchForSupportedValues;\n    } else {\n      return value && (incorrectType || noMatchForSupportedValues);\n    }\n  });\n  // If no objections found then data matches contraints\n  return typeof foundObjection === 'undefined';\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n/**\n * Constraints for each type of the item configuration.\n */\n\nconst itemConstraints = {\n  event: {\n    event: {\n      type: 'string'\n    },\n    eventInfo: {\n      optional: true\n    }\n  },\n  listenerOn: {\n    on: {\n      type: 'string'\n    },\n    handler: {\n      type: 'function'\n    },\n    scope: {\n      type: 'string',\n      values: ['past', 'future', 'all'],\n      optional: true\n    },\n    path: {\n      type: 'string',\n      optional: true\n    }\n  },\n  listenerOff: {\n    off: {\n      type: 'string'\n    },\n    handler: {\n      type: 'function',\n      optional: true\n    },\n    scope: {\n      type: 'string',\n      values: ['past', 'future', 'all'],\n      optional: true\n    },\n    path: {\n      type: 'string',\n      optional: true\n    }\n  }\n};\n\nmodule.exports = itemConstraints;\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nconst CONSTANTS = {\n  /**\n   * @typedef {String} ItemType\n   **/\n\n  /**\n   * Enumeration of data layer item types.\n   *\n   * @enum {ItemType}\n   * @readonly\n   */\n  itemType: {\n    /** Represents an item of type data */\n    DATA: 'data',\n    /** Represents an item of type function */\n    FCTN: 'fctn',\n    /** Represents an item of type event */\n    EVENT: 'event',\n    /** Represents an item of type listener on */\n    LISTENER_ON: 'listenerOn',\n    /** Represents an item of type listener off */\n    LISTENER_OFF: 'listenerOff'\n  },\n\n  /**\n   * @typedef {String} DataLayerEvent\n   **/\n\n  /**\n   * Enumeration of data layer events.\n   *\n   * @enum {DataLayerEvent}\n   * @readonly\n   */\n  dataLayerEvent: {\n    /** Represents an event triggered for any change in the data layer state */\n    CHANGE: 'adobeDataLayer:change',\n    /** Represents an event triggered for any event push to the data layer */\n    EVENT: 'adobeDataLayer:event'\n  },\n\n  /**\n   * @typedef {String} ListenerScope\n   **/\n\n  /**\n   * Enumeration of listener scopes.\n   *\n   * @enum {ListenerScope}\n   * @readonly\n   */\n  listenerScope: {\n    /** Past events only */\n    PAST: 'past',\n    /** Future events only */\n    FUTURE: 'future',\n    /** All events, past and future */\n    ALL: 'all'\n  }\n};\n\nmodule.exports = CONSTANTS;\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst CONSTANTS = require('./constants');\n\n/**\n * Constructs a data layer listener.\n *\n * @param {Item} item The item from which to construct the listener.\n */\n\nmodule.exports = function(item) {\n  const _event = item.config.on || item.config.off;\n  const _handler = item.config.handler || null;\n  const _scope = item.config.scope || (item.config.on && CONSTANTS.listenerScope.ALL) || null;\n  const _path = item.config.path || null;\n\n  return {\n    /**\n     * Returns the listener event name.\n     *\n     * @returns {String} The listener event name.\n     */\n    event: _event,\n\n    /**\n     * Returns the listener handler.\n     *\n     * @returns {(Function|null)} The listener handler.\n     */\n    handler: _handler,\n\n    /**\n     * Returns the listener scope.\n     *\n     * @returns {(String|null)} The listener scope.\n     */\n    scope: _scope,\n\n    /**\n     * Returns the listener path.\n     *\n     * @returns {(String|null)} The listener path.\n     */\n    path: _path\n  };\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { cloneDeepWith } from './utils/mergeWith';\n\nconst constants = require('./constants');\nconst listenerMatch = require('./utils/listenerMatch');\nconst indexOfListener = require('./utils/indexOfListener');\n\n/**\n * Creates a listener manager.\n *\n * @param {Manager} dataLayerManager The data layer manager.\n * @returns {ListenerManager} A listener manager.\n */\nmodule.exports = function(dataLayerManager) {\n  const _listeners = {};\n  const _dataLayerManager = dataLayerManager;\n\n  /**\n   * Find index of listener in listeners object.\n   */\n  const _indexOfListener = indexOfListener.bind(null, _listeners);\n\n  const ListenerManager = {\n    /**\n     * Registers a listener.\n     *\n     * @function\n     * @param {Listener} listener The listener to register.\n     * @returns {Boolean} true if the listener was registered, false otherwise.\n     */\n    register: function(listener) {\n      const event = listener.event;\n\n      if (Object.prototype.hasOwnProperty.call(_listeners, event)) {\n        if (_indexOfListener(listener) === -1) {\n          _listeners[listener.event].push(listener);\n          return true;\n        }\n      } else {\n        _listeners[listener.event] = [listener];\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Unregisters a listener.\n     *\n     * @function\n     * @param {Listener} listener The listener to unregister.\n     */\n    unregister: function(listener) {\n      const event = listener.event;\n\n      if (Object.prototype.hasOwnProperty.call(_listeners, event)) {\n        if (!(listener.handler || listener.scope || listener.path)) {\n          _listeners[event] = [];\n        } else {\n          const index = _indexOfListener(listener);\n          if (index > -1) {\n            _listeners[event].splice(index, 1);\n          }\n        }\n      }\n    },\n    /**\n     * Triggers listeners related to the passed item.\n     *\n     * @function\n     * @param {Item} item Item to trigger listener for.\n     */\n    triggerListeners: function(item) {\n      const triggeredEvents = _getTriggeredEvents(item);\n      triggeredEvents.forEach(function(event) {\n        if (Object.prototype.hasOwnProperty.call(_listeners, event)) {\n          for (const listener of _listeners[event]) {\n            _callHandler(listener, item);\n          }\n        }\n      });\n    },\n    /**\n     * Triggers a single listener on the passed item.\n     *\n     * @function\n     * @param {Listener} listener Listener to call.\n     * @param {Item} item Item to call the listener with.\n     */\n    triggerListener: function(listener, item) {\n      _callHandler(listener, item);\n    }\n  };\n\n  /**\n   * Calls the listener handler on the item if a match is found.\n   *\n   * @param {Listener} listener The listener.\n   * @param {Item} item The item.\n   * @private\n   */\n  function _callHandler(listener, item) {\n    if (listenerMatch(listener, item)) {\n      const callbackArgs = [cloneDeepWith(item.config)];\n      listener.handler.apply(_dataLayerManager.getDataLayer(), callbackArgs);\n    }\n  }\n\n  /**\n   * Returns the names of the events that are triggered for this item.\n   *\n   * @param {Item} item The item.\n   * @returns {Array<String>} The names of the events that are triggered for this item.\n   * @private\n   */\n  function _getTriggeredEvents(item) {\n    const triggeredEvents = [];\n\n    switch (item.type) {\n      case constants.itemType.DATA: {\n        triggeredEvents.push(constants.dataLayerEvent.CHANGE);\n        break;\n      }\n      case constants.itemType.EVENT: {\n        triggeredEvents.push(constants.dataLayerEvent.EVENT);\n        if (item.data) triggeredEvents.push(constants.dataLayerEvent.CHANGE);\n        if (item.config.event !== constants.dataLayerEvent.CHANGE) {\n          triggeredEvents.push(item.config.event);\n        }\n        break;\n      }\n    }\n    return triggeredEvents;\n  }\n\n  return ListenerManager;\n};\n","\nfunction mergeWith(target, source, customizer) {\n  if (!source || !target) {\n    return;\n  }\n\n  Object.keys(source).forEach(key => {\n    let newValue = customizer ? customizer(target[key], source[key], key, target) : undefined;\n\n    if (newValue === undefined) {\n      if (source[key] === Object(source[key]) && key in target && !Array.isArray(source[key])) {\n        newValue = mergeWith(target[key], source[key], customizer);\n      } else {\n        newValue = source[key];\n      }\n    }\n    target[key] = newValue;\n  });\n\n  return target;\n}\n\nfunction cloneDeepWith(target, customizer) {\n  let newTarget = customizer ? customizer(target) : undefined;\n\n  if (newTarget === undefined) {\n    if (target === Object(target) && !Array.isArray(target)) {\n      newTarget = {};\n      const keys = Object.keys(target);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        newTarget[key] = cloneDeepWith(target[key], customizer);\n      }\n    }\n    newTarget = structuredClone(target);\n  }\n\n  return newTarget;\n}\n\nmodule.exports = {\n  mergeWith,\n  cloneDeepWith\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { has } from './get.js';\n\nconst CONSTANTS = require('../constants');\nconst ancestorRemoved = require('./ancestorRemoved');\n\n/**\n * Checks if the listener matches the item.\n *\n * @param {Listener} listener The listener.\n * @param {Item} item The item.\n * @returns {Boolean} true if listener matches the item, false otherwise.\n */\nfunction listenerMatch(listener, item) {\n  const event = listener.event;\n  const itemConfig = item.config;\n  let matches = false;\n\n  if (item.type === CONSTANTS.itemType.DATA) {\n    if (event === CONSTANTS.dataLayerEvent.CHANGE) {\n      matches = selectorMatches(listener, item);\n    }\n  } else if (item.type === CONSTANTS.itemType.EVENT) {\n    if (event === CONSTANTS.dataLayerEvent.EVENT || event === itemConfig.event) {\n      matches = selectorMatches(listener, item);\n    }\n    if (item.data && event === CONSTANTS.dataLayerEvent.CHANGE) {\n      matches = selectorMatches(listener, item);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Checks if a listener has a selector that points to an object in the data payload of an item.\n *\n * @param {Listener} listener The listener to extract the selector from.\n * @param {Item} item The item.\n * @returns {Boolean} true if a selector is not provided or if the given selector is matching, false otherwise.\n * @private\n */\nfunction selectorMatches(listener, item) {\n  if (item.data && listener.path) {\n    return has(item.data, listener.path) || ancestorRemoved(item.data, listener.path);\n  }\n\n  return true;\n}\n\nmodule.exports = listenerMatch;\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { has, get } from './get.js';\n\n/**\n  * Checks if the object contains an ancestor that is set to null or undefined.\n  *\n  * @param {Object} object The object to check.\n  * @param {String} path The path to check.\n  * @returns {Boolean} true if the object contains an ancestor that is set to null or undefined, false otherwise.\n  * @private\n  */\nmodule.exports = function(object, path) {\n  let ancestorPath = path.substring(0, path.lastIndexOf('.'));\n  while (ancestorPath) {\n    if (has(object, ancestorPath)) {\n      const ancestorValue = get(object, ancestorPath);\n      if (ancestorValue === null || ancestorValue === undefined) {\n        return true;\n      }\n    }\n    ancestorPath = ancestorPath.substring(0, ancestorPath.lastIndexOf('.'));\n  }\n\n  return false;\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nmodule.exports = function(listeners, listener) {\n  const event = listener.event;\n\n  if (Object.prototype.hasOwnProperty.call(listeners, event)) {\n    for (const [index, registeredListener] of listeners[event].entries()) {\n      if (registeredListener.handler === listener.handler) {\n        return index;\n      }\n    }\n  }\n  return -1;\n};\n","/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst { cloneDeepWith, mergeWith } = require('./mergeWith.js');\n\n/**\n * Merges the source into the object and sets objects as 'undefined' if they are 'undefined' in the source object.\n *\n * @param {Object} object The object into which to merge.\n * @param {Object} source The source to merge with.\n * @returns {Object} The object into which source was merged in.\n */\nmodule.exports = function(object, source) {\n  const makeOmittingCloneDeepCustomizer = function(predicate) {\n    return function omittingCloneDeepCustomizer(value) {\n      if (value === Object(value)) {\n        if (Array.isArray(value)) {\n          return value.filter(item => !predicate(item)).map(item => cloneDeepWith(item, omittingCloneDeepCustomizer));\n        }\n\n        const clone = {};\n        for (const subKey of Object.keys(value)) {\n          if (!predicate(value[subKey])) {\n            clone[subKey] = cloneDeepWith(value[subKey], omittingCloneDeepCustomizer);\n          }\n        }\n        return clone;\n      }\n      return undefined;\n    };\n  };\n\n  const customizer = function(_, srcValue) {\n    if (typeof srcValue === 'undefined' || srcValue === null) {\n      return null;\n    }\n  };\n\n  const omitDeep = function(value, predicate = (val) => !val) {\n    return cloneDeepWith(value, makeOmittingCloneDeepCustomizer(predicate));\n  };\n\n  mergeWith(object, source, customizer);\n\n  // Remove null or undefined objects\n  object = omitDeep(object, v => v === null || v === undefined);\n\n  return object;\n};\n"],"names":["$74148a4d3a24de22$exports","$a497a983a0dcb4fe$exports","get","obj","path","defaultValue","keys","Array","isArray","split","result","key","undefined","has","hasOwnProperty","$74148a4d3a24de22$require$version","$a9db500a8fedd32d$exports","JSON","parse","version","$aad298d30752c6a6$exports","$083a6b267f0e4609$exports","data","constraints","foundObjection","Object","find","type","supportedValues","values","mandatory","optional","value","valueType","incorrectType","noMatchForSupportedValues","includes","$196c54e0717366f7$exports","event","eventInfo","listenerOn","on","handler","scope","listenerOff","off","$446225c82cc393af$exports","itemType","DATA","FCTN","EVENT","LISTENER_ON","LISTENER_OFF","dataLayerEvent","CHANGE","listenerScope","PAST","FUTURE","ALL","$aad298d30752c6a6$var$isEmpty","constructor","entries","length","itemConfig","index","_type","$aad298d30752c6a6$var$isPlainObject","proto","getPrototypeOf","_data","getData","filter","reduce","_config","config","valid","$baa3abaa0e0ec31e$exports","item","_event","_handler","_scope","_path","$2745f882509d60f5$exports","$20b0c66b40d81262$exports","mergeWith","$20b0c66b40d81262$var$mergeWith","target","source","customizer","forEach","newValue","cloneDeepWith","$20b0c66b40d81262$var$cloneDeepWith","newTarget","i","structuredClone","$aed5a7be42aa6003$exports","$37e37d5d9a9bb306$exports","$aed5a7be42aa6003$var$selectorMatches","listener","object","ancestorPath","substring","lastIndexOf","ancestorValue","matches","$0df9287d847fce76$exports","listeners","prototype","call","registeredListener","dataLayerManager","_listeners","_indexOfListener","bind","_callHandler","callbackArgs","apply","_dataLayerManager","getDataLayer","register","push","unregister","splice","triggerListeners","triggeredEvents","_getTriggeredEvents","triggerListener","$674a2637d63bdaa3$exports","$674a2637d63bdaa3$require$cloneDeepWith","$674a2637d63bdaa3$require$mergeWith","_","srcValue","omitDeep","predicate","val","omittingCloneDeepCustomizer","map","clone","subKey","v","_listenerManager","_dataLayer","_preLoadedItems","_state","DataLayerManager","getState","_updateState","_processItem","_logInvalidItemError","_getBefore","slice","typeProcessors","fctn","registeredItem","registered","message","stringify","console","error","dataLayer","args","pushArguments","filteredArguments","addEventListener","callback","options","eventListenerItem","removeEventListener","_processItems","$89cf5368902f0282$var$DataLayer","Manager","window","adobeDataLayer","warn","require","DataLayer","module","exports","Item","Listener","ListenerManager","CONSTANTS","customMerge","_initialize","_augment","dataMatchesContraints","ITEM_CONSTRAINTS","isEmpty","isPlainObject","_index","getType","_valid","itemConstraints","constants","listenerMatch","indexOfListener","ancestorRemoved","selectorMatches","makeOmittingCloneDeepCustomizer"],"version":3,"file":"adobe-client-data-layer.min.js.map"}