/*! Copyright 2025 Adobe
All Rights Reserved. */
var b=Object.defineProperty;var F=(h,e,t)=>e in h?b(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var r=(h,e,t)=>F(h,typeof e!="symbol"?e+"":e,t);const u={"Content-Type":"application/json",Accept:"application/json"};class H{constructor(){r(this,"_endpoint");r(this,"_fetchGraphQlHeaders",{});r(this,"_beforeHooks",[]);r(this,"_afterHooks",[])}get endpoint(){return this._endpoint}get fetchGraphQlHeaders(){return this._fetchGraphQlHeaders}setEndpoint(e){this._endpoint=e}setFetchGraphQlHeader(e,t){this._fetchGraphQlHeaders={...this.fetchGraphQlHeaders,[e]:t}}removeFetchGraphQlHeader(e){delete this._fetchGraphQlHeaders[e]}getFetchGraphQlHeader(e){return this._fetchGraphQlHeaders[e]}setFetchGraphQlHeaders(e){typeof e=="function"?this._fetchGraphQlHeaders={...this._fetchGraphQlHeaders,...e(this._fetchGraphQlHeaders)}:this._fetchGraphQlHeaders={...e}}addBeforeHook(e){this._beforeHooks.push(e)}addAfterHook(e){this._afterHooks.push(e)}async fetchGraphQl(e,t){const l=this.endpoint,p=this.fetchGraphQlHeaders;if(!l)throw Error('Missing "url"');const s=(t==null?void 0:t.method)??"POST",G=t==null?void 0:t.cache,Q=t==null?void 0:t.signal;let f;const d=new URL(l),o={...u,...p};s==="POST"&&(f=JSON.stringify({query:e,variables:t==null?void 0:t.variables})),s==="GET"&&(d.searchParams.append("query",k(e)),t!=null&&t.variables&&d.searchParams.append("variables",JSON.stringify(t.variables)));let a={method:s,headers:o,body:f,cache:G,signal:Q};return a=await this._beforeHooks.reduce(async(i,c)=>c(await i),Promise.resolve(a)),await fetch(d,a).then(i=>i.json().then(c=>this._afterHooks.reduce(async(g,_)=>_(a,await g),Promise.resolve(c))))}getConfig(){return{endpoint:this.endpoint,fetchGraphQlHeaders:this.fetchGraphQlHeaders}}getMethods(){return{setEndpoint:this.setEndpoint.bind(this),setFetchGraphQlHeader:this.setFetchGraphQlHeader.bind(this),getFetchGraphQlHeader:this.getFetchGraphQlHeader.bind(this),removeFetchGraphQlHeader:this.removeFetchGraphQlHeader.bind(this),setFetchGraphQlHeaders:this.setFetchGraphQlHeaders.bind(this),fetchGraphQl:this.fetchGraphQl.bind(this),getConfig:this.getConfig.bind(this),addBeforeHook:this.addBeforeHook.bind(this),addAfterHook:this.addAfterHook.bind(this)}}}const n=new H;class v extends H{get endpoint(){return this._endpoint??n.endpoint}get fetchGraphQlHeaders(){return this._endpoint?this._fetchGraphQlHeaders:{...this._fetchGraphQlHeaders,...n.fetchGraphQlHeaders}}}function k(h){return h=h.replace(/#.*/g,""),h=h.replace(/\s+/g," "),h.trim()}const{setEndpoint:w,setFetchGraphQlHeaders:E,setFetchGraphQlHeader:P,getFetchGraphQlHeader:y,removeFetchGraphQlHeader:A,fetchGraphQl:C,getConfig:B,addBeforeHook:M,addAfterHook:O}=n.getMethods();export{v as FetchGraphQL,O as addAfterHook,M as addBeforeHook,C as fetchGraphQl,B as getConfig,y as getFetchGraphQlHeader,A as removeFetchGraphQlHeader,w as setEndpoint,P as setFetchGraphQlHeader,E as setFetchGraphQlHeaders};
//# sourceMappingURL=fetch-graphql.js.map
