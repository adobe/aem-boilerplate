/*! Copyright 2025 Adobe
All Rights Reserved. */
import{S as M}from"./chunks/vcomponent.js";import{R as ee,V as re,c as oe,g as te}from"./chunks/vcomponent.js";import{d as E}from"./chunks/cjs.js";import{d as se,a as ie,i as le}from"./chunks/deviceUtils.js";import{C as ae,I as ce,i as ue}from"./chunks/initializer.js";import{x as R,A as O,h as _,T as L,E as D,q as f,_ as V,y as v}from"./chunks/icons/Add.js";import{IntlContext as k}from"./i18n.js";import{g as pe,s as fe}from"./chunks/image-params-keymap.js";import{g as he,s as me}from"./chunks/locale-config.js";import{g as ye}from"./chunks/get-path-value.js";import"./preact-jsx-runtime.js";import"./signals.js";const U=r=>{const o=new FormData(r);return Object.fromEntries(o)},A=r=>{const o=new FormData(r),s=Object.fromEntries(o);return Object.entries(s).reduce((n,[d])=>{const c=r.elements[d];return c!=null&&c.validationMessage?{...n,[d]:c.validationMessage}:{...n}},{})},F={arrayMerge:(r,o,s)=>{const l=r.slice();return o.forEach((n,d)=>{typeof l[d]>"u"?l[d]=s.cloneUnlessOtherwiseSpecified(n,s):s.isMergeableObject(n)?l[d]=E(r[d],n,s):r.indexOf(n)===-1&&l.push(n)}),l}};function W(r,o){return o?E(r,o,F):r}const H=r=>r.replace("_","-");function q(r,o={},s,l,n,d="div"){const c=R(M),S=O(null),u=O("pending"),w=O([]),[y,P]=_({children:[l]}),[N,$]=_({}),b=L(()=>({get:t=>N[t],set:(t,e)=>{$({...b,[t]:e})}}),[N]),{intl:B}=R(k);o.dictionary=B.dictionary,o._setProps=t=>{P(e=>{const i=typeof t=="function"?t(e):t;if(n){const a=D(n(e),{key:"render"}),h=e.children.findIndex(p=>(p==null?void 0:p.key)==="render");e.children[h]=a}return i})};const g=f(t=>{typeof t=="function"?w.current.push(t):console.warn("Skipped: Invalid _registerMethod",t)},[]);o._registerMethod=g;const m=f(t=>V(d,{"data-slot-html-element":t.tagName.toLowerCase(),ref:e=>{e==null||e.appendChild(t)}},null),[d]);o._htmlElementToVNode=m,o.getSlotElement=f(t=>{var i,a;const e=(i=S.current)==null?void 0:i.querySelector(`[data-slot-key="${t}"]`);if(I(`ðŸŸ¦ "${r}" Slot getSlotElement: ${t}`,(a=S.current)==null?void 0:a.cloneNode(!0),e==null?void 0:e.cloneNode(!0)),!!e)return{appendChild:h=>{e.appendChild(h)},prependChild:h=>{e.insertBefore(h,e.firstChild)},appendSibling:h=>{const p=e.parentNode;p==null||p.insertBefore(h,e.nextSibling)},prependSibling:h=>{const p=e.parentNode;p==null||p.insertBefore(h,e)}}},[r]),o.onRender=f(t=>{w.current.push(t)},[]),o.onChange=o.onRender,o.replaceWith=f(t=>{g(e=>{const i=m(t);e._setProps({children:[i]})})},[m,g]),o.appendChild=f(t=>{g(e=>{const i=m(t);e._setProps(a=>({...a,children:[...a.children,i]}))})},[m,g]),o.prependChild=f(t=>{g(e=>{const i=m(t);e._setProps(a=>({...a,children:[i,...a.children]}))})},[m,g]),o.appendSibling=f(t=>{g(()=>{var i,a;const e=(i=S.current)==null?void 0:i.parentNode;e==null||e.insertBefore(t,((a=S.current)==null?void 0:a.nextSibling)??null)})},[g]),o.prependSibling=f(t=>{g(()=>{var i;const e=(i=S.current)==null?void 0:i.parentNode;e==null||e.insertBefore(t,S.current)})},[g]);const C=f(async()=>{if(u.current==="loading")return;u.current="loading",I(`ðŸŸ¨ "${r}" Slot Rendered`);const t=n?D(n(y),{key:"render"}):null;P({children:[t??l]}),w.current.forEach(e=>{e(o,b)}),u.current="ready"},[l,o,r,y,n,b]),j=f(async()=>{if(s)try{u.current="loading",I(`ðŸŸ© "${r}" Slot Initialized`),await s(o,S.current)}catch(t){console.error(`Error in "${s.name}" Slot callback`,t)}finally{u.current="ready",await C()}},[s,o,C,r]);return v(()=>{j().finally(()=>{c&&(c.value.delete(r),c.value=new Set(c.value))})},[]),v(()=>{C()},[JSON.stringify(o),JSON.stringify(N)]),[S,y]}function X({name:r,context:o,slot:s,children:l,render:n,slotTag:d="div",contentTag:c="div",...S}){const u=R(M),[w,y]=q(r,o,s,l,n,c);return L(()=>{if(!r)return console.warn('Slot "name" is required');u&&(u.value.add(r),u.value=new Set(u.value))},[r,u]),V(d,{...S,ref:w,"data-slot":r},y.children)}window.DROPINS=window.DROPINS||{};window.DROPINS.showSlots=async r=>{window.sessionStorage.setItem("dropin-debugger--show-slots",r.toString()),document.body.classList.toggle("dropin-debugger--show-slots",r)};let I=()=>{};window.DROPINS.logSlots=async r=>{window.sessionStorage.setItem("dropin-debugger--log-slots",r.toString()),I=r?(...o)=>console.log(...o):()=>{}};window.DROPINS.showSlots(window.sessionStorage.getItem("dropin-debugger--show-slots")==="true");window.DROPINS.logSlots(window.sessionStorage.getItem("dropin-debugger--log-slots")==="true");function Y(r){const o=document.cookie.split(";");let s;return o.forEach(l=>{const[n,d]=l.trim().split("=");n===r&&(s=decodeURIComponent(d))}),s}export{ae as Config,ce as Initializer,ee as Render,X as Slot,M as SlotQueueContext,re as VComponent,oe as classes,se as debounce,E as deepmerge,te as generateSrcset,Y as getCookie,A as getFormErrors,U as getFormValues,he as getGlobalLocale,pe as getImageParamsKeyMap,ye as getPathValue,ue as initializers,ie as isIOSMobileDevice,le as isNumber,W as merge,me as setGlobalLocale,fe as setImageParamsKeyMap,H as toLanguageTag,q as useSlot};
//# sourceMappingURL=lib.js.map
