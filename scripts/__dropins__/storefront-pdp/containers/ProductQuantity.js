/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as P}from"@dropins/tools/preact-jsx-runtime.js";import{useState as i,useEffect as y}from"@dropins/tools/preact-compat.js";import{classes as I}from"@dropins/tools/lib.js";import{Incrementer as b}from"@dropins/tools/components.js";import{events as m}from"@dropins/tools/event-bus.js";import{s as q}from"../chunks/isProductConfigurationValid.js";import{g as D}from"../chunks/getFetchedProductData.js";import{k as h,c as x,l as C}from"../chunks/fetchProductData.js";import{useText as S}from"@dropins/tools/i18n.js";import"../fragments.js";import"@dropins/tools/fetch-graphql.js";const U=({initialData:u=null,scope:a,onValue:e,children:F,...o})=>{const l=S("PDP.Product.Incrementer.label").label,[c,f]=i(u),[s,d]=i(()=>h(1));y(()=>{const r=m.on("pdp/data",f,{scope:a}),t=m.on("pdp/values",({quantity:n})=>{d(n)},{eager:!0,scope:a});return()=>{r==null||r.off(),t==null||t.off()}},[a]);const p=r=>{const t=parseInt(r,10);q(g=>({...g,quantity:t}),{scope:a});const{persistURLParams:n}=x.getConfig()??{};n&&C({quantity:t}),e==null||e(t)};return c?P(b,{name:"quantity",defaultValue:String(s),value:String(s),min:1,"aria-label":l,onValue:p,...o,className:I(["pdp-quantity",o.className])},"quantity"):null};U.getInitialData=D;export{U as ProductQuantity,U as default};
//# sourceMappingURL=ProductQuantity.js.map
